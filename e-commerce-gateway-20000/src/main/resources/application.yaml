server:
  port: 20000
spring:
  application:
    name: e-commerce-gateway
#  cloud:
#    gateway:
#      routes: # 配置路由，可以配置多个路由 List<RouteDefinition> routes
#        - id: member_route01  # 路由id，自定义配置，要求唯一
#          # gateway最终访问的url=uri+Path
#          # 匹配后提供服务的路由地址也可以是外网如 http://baidu.com
#          # 比如：客户端/浏览器请求url：http://localhost:20000/member/get/1，其中localhost:20000用于找到网关服务
#          # 如果根据Path匹配成功，最终访问的url/转发url就是 url=http://localhost:10010/member/get/1
#          # 如果匹配失败，则由gateway返回404信息
#          # 这里配置固定的uri，在当前这种情况可以不使用eureka-server
#          uri: http://localhost:10010
#          predicates: # 断言可以有多种形式
#            - Path=/member/get/**
#        - id: member_route02
#          uri: http://localhost:10010
#          predicates:
#            # 这时如果客户端/浏览器访问gateway的url为 http://localhost:20000/member/save
#            # 匹配Path成功，最终访问的url就是 http://localhost:10010/member/save
#            - Path=/member/save
#        - id: member_route03
#          uri: http://baidu.com
#          predicates:
#            - Path=/
# 配置eureka-client
eureka:
  instance:
    # Eureka Client配置的实例名称，意味着这个实例会以这个名称注册到Eureka Server
    hostname: e-commerce-gateway
  client:
    register-with-eureka: true # 将自己注册到Eureka-Server
    fetch-registry: true  # 是否从Eureka Server获取服务注册信息
    service-url:
      # 指定Eureka Server的地址，即client将使用这个地址来注册自己，并从这个地址获取服务注册信息
      defaultZone: http://eureka9001.com:9001/eureka